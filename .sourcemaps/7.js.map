{"version":3,"sources":["../../src/pages/settings/settings.module.ts","../../src/pages/settings/settings.ts"],"names":[],"mappings":"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","file":"7.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { SettingsPage } from './settings';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SettingsPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(SettingsPage),\r\n  ],\r\n  exports: [\r\n    SettingsPage\r\n  ]\r\n})\r\nexport class SettingsPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, AlertController, ToastController } from 'ionic-angular';\r\nimport { StorageProvider } from '../../providers/storage/storage'\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-settings',\r\n  templateUrl: 'settings.html',\r\n})\r\nexport class SettingsPage {\r\n  user: any = {\r\n    permissions: {\r\n      name: 'none'\r\n    }\r\n  }\r\n  lastBackup:any= {\r\n    online: null,\r\n    offline: null\r\n  }\r\n  name: string;\r\n\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    public navParams: NavParams,\r\n    public storagePrvdr: StorageProvider,\r\n    public alertCtrl: AlertController,\r\n    public toastCtrl: ToastController) {\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    this.storagePrvdr.getUser().then(\r\n      res => {\r\n        if (!res['permissions']) { res['permissions'] = { name: '' } }\r\n        this.user = res\r\n        this.name = this.user.permissions.name\r\n        console.log('user', this.user)\r\n      })\r\n    this.storagePrvdr.get('lastBackup').then((res) => this.lastBackup = res ? res : { online: null,offline:null})\r\n  }\r\n  userEdit(name) {\r\n    let prompt = this.alertCtrl.create({\r\n      title: 'User Name',\r\n      message: \"Enter your name\",\r\n      inputs: [\r\n        {\r\n          name: 'userName',\r\n          placeholder: 'Name',\r\n          type: 'text'\r\n        },\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: data => {\r\n          }\r\n        },\r\n        {\r\n          text: 'Save',\r\n          handler: data => {\r\n            this.updateUser('name', data.userName)\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    prompt.present();\r\n  }\r\n  updateUser(key, val) {\r\n    console.log(key,val)\r\n    if (this.user.hasOwnProperty(key)) { this.user[key] = val }\r\n    this.storagePrvdr.saveUser(this.user)\r\n  }\r\n  login() {\r\n    let prompt = this.alertCtrl.create({\r\n      title: 'Login',\r\n      message: \"Enter organisation access code in the box below\",\r\n      inputs: [\r\n        {\r\n          name: 'accessCode',\r\n          placeholder: 'Code',\r\n          type: 'password'\r\n        },\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: data => {\r\n          }\r\n        },\r\n        {\r\n          text: 'Save',\r\n          handler: data => {\r\n            this.storagePrvdr.assignPermissions(data.accessCode).then((user) => {\r\n              console.log('user', user)\r\n              this.user = user\r\n            }\r\n              // this.presentToast('Successfully signed in as '+user.name)\r\n            ).catch((err) => {\r\n              console.log('err', err)\r\n            })\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    prompt.present();\r\n  }\r\n  logout() {\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Sign Out',\r\n      message: 'Do you want to sign out of ' + this.user.permissions.name,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n          }\r\n        },\r\n        {\r\n          text: 'Confirm',\r\n          handler: () => {\r\n            this.user.permissions = {}\r\n            this.storagePrvdr.saveUser(this.user)\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    alert.present();\r\n\r\n  }\r\n\r\n  presentToast(message) {\r\n    let toast = this.toastCtrl.create({\r\n      message: message,\r\n      duration: 3000\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  sync() {\r\n    let time = Date.now();\r\n    this.storagePrvdr.set('lastBackup',time)\r\n    this.lastBackup.offline=Date.now()\r\n    this.storagePrvdr.sync({ user: this.user }).then(res => {\r\n      this.lastBackup = res\r\n    })\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts"],"sourceRoot":""}